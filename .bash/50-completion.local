

[ -e /etc/bash_completion ] || return


_fab()
{
    local cur
    COMPREPLY=()
    # Variable to hold the current word
    cur="${COMP_WORDS[COMP_CWORD]}"

    # Build a list of the available tasks using the command 'fab -l'
    local tags=$(fab -l 2>/dev/null | grep "^ " | awk '{print $1;}')

    # Generate possible matches and store them in the
    # array variable COMPREPLY
    COMPREPLY=($(compgen -W "${tags}" $cur))
}

# Assign the auto-completion function _fab for our command fab.
complete -F _fab fab


#
# If we can load git-completion things then apply that to the
# `.DOTFILES` alias too.
#
if [ -e  /usr/share/bash-completion/completions/gitk ]; then
    .  /usr/share/bash-completion/completions/gitk
    if ( declare -f -F __git_complete >/dev/null ) ; then
	__git_complete .DOTFILES __git_main
    fi
fi


#
# If we have a local install of `pass` then enable the completion
#
if [ -e /opt/pass/completion/pass.bash-completion ]; then
    . /opt/pass/completion/pass.bash-completion
fi

#
# sysbox is a collection of scripting/sysadmin utilities:
#
#    https://github.com/skx/sysbox
#
# rss2email is a simple utility for polling RSS feeds and
# generating emails:
#
#    https://github.com/skx/rss2email
#
# Both have support for bash-completion
#

for cmd in rss2email sysbox ; do
    if ( which ${cmd} ) ; then
        source <(${cmd} bash-completion)
    fi
done
